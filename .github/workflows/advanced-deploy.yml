name: Advanced Website Workflow

on:
  push:
    branches:
      - main  # Trigger on pushes to main branch
  pull_request:
    branches:
      - main  # Run tests and checks for PRs

jobs:
  # Step 1: Code Quality Checks
  lint-code:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Lint JavaScript
        run: npx eslint "/*.js"

      - name: Lint CSS
        run: npx stylelint "/*.css"

      - name: Lint HTML
        run: npx htmlhint "/*.html"

  # Step 2: Secret Key and API Check
  check-secrets:
    name: Check for Exposed Secrets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run sensitive info check
        uses: yochay/sensitive-info-checker@v1
        with:
          file-path: ./

  # Step 3: Dependency Vulnerability Audit
  audit-dependencies:
    name: Audit Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Audit dependencies for vulnerabilities
        run: npm audit --production

  # Step 4: Lighthouse Performance Audit
  lighthouse-audit:
    name: Run Lighthouse Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Lighthouse CI
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli

      - name: Run Lighthouse Audit
        run: |
          lhci autorun --collect.staticDistDir=./dist

  # Step 5: Build and Deploy
  build-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: [lint-code, check-secrets, audit-dependencies, lighthouse-audit]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Build the project
        run: npm run build  # Replace this with your actual build command

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist  # Replace with your build output directory

  # Step 6: Deployment Notifications
  notify:
    name: Deployment Notifications
    runs-on: ubuntu-latest
    if: always()  # Runs even if previous jobs fail
    steps:
      - name: Notify via Slack/Discord
        uses: Ilshidur/action-slack@v3
        with:
          status: ${{ job.status }}
          message: "Deployment ${{ job.status }} for ${{ github.repository }}"
          url: "https://github.com/${{ github.repositoryÂ }}/actions"
